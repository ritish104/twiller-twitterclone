{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ACER\\\\Desktop\\\\Nullclass Twitter\\\\twitter clone\\\\Twiller\\\\src\\\\Pages\\\\Feed\\\\Tweetbox\\\\Tweetbox.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Tweetbox.css\";\nimport { Avatar, Button } from \"@mui/material\";\nimport AddPhotoAlternateOutlinedIcon from \"@mui/icons-material/AddPhotoAlternateOutlined\";\nimport axios from \"axios\";\nimport { useUserAuth } from \"../../../context/UserAuthContext\";\nimport useLoggedinuser from \"../../../hooks/useLoggedinuser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tweetbox = () => {\n  _s();\n  var _loggedinsuer$, _loggedinsuer$2;\n  const [post, setpost] = useState(\"\");\n  const [imageurl, setimageurl] = useState(\"\");\n  const [isloading, setisloading] = useState(false);\n  const [name, setname] = useState(\"\");\n  const [username, setusername] = useState(\"\");\n  const {\n    user\n  } = useUserAuth();\n  const [loggedinsuer] = useLoggedinuser();\n  const email = user === null || user === void 0 ? void 0 : user.email;\n  const userprofilepic = (_loggedinsuer$ = loggedinsuer[0]) !== null && _loggedinsuer$ !== void 0 && _loggedinsuer$.profileImage ? loggedinsuer[0].profileImage : user && user.photoURL;\n  const handleuploadimage = e => {\n    setisloading(true);\n    const image = e.target.files[0];\n    // console.log(image)\n    const formData = new FormData();\n    formData.set(\"image\", image);\n    axios.post(\"https://api.imgbb.com/1/upload?key=b48ccca05a6f8a493e15fe0e4d526b31\", formData).then(res => {\n      setimageurl(res.data.data.display_url);\n      // console.log(res.data.data.display_url);\n      setisloading(false);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n  const handletweet = async e => {\n    e.preventDefault();\n\n    // Default values for name and username\n    let currentName = \"\";\n    let currentUsername = \"\";\n    try {\n      var _user$providerData$;\n      // Check if the user is logged in with email/password or social login\n      if ((user === null || user === void 0 ? void 0 : (_user$providerData$ = user.providerData[0]) === null || _user$providerData$ === void 0 ? void 0 : _user$providerData$.providerId) === \"password\") {\n        var _data$, _data$2;\n        const res = await fetch(`http://localhost:5000/loggedinuser?email=${email}`);\n        const data = await res.json();\n        currentName = (_data$ = data[0]) === null || _data$ === void 0 ? void 0 : _data$.name;\n        currentUsername = (_data$2 = data[0]) === null || _data$2 === void 0 ? void 0 : _data$2.username;\n      } else {\n        currentName = user === null || user === void 0 ? void 0 : user.displayName;\n        currentUsername = email === null || email === void 0 ? void 0 : email.split(\"@\")[0];\n      }\n\n      // Ensure we have a valid name before proceeding\n      if (currentName) {\n        const userPost = {\n          profilephoto: userprofilepic,\n          post: post,\n          photo: imageurl,\n          username: currentUsername,\n          name: currentName,\n          email: email\n        };\n\n        // Clear input fields after data is prepared\n        setpost(\"\");\n        setimageurl(\"\");\n\n        // Post the data to the server\n        const postRes = await fetch(\"http://localhost:5000/post\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(userPost)\n        });\n        const postData = await postRes.json();\n        console.log(\"Post successfully sent:\", postData);\n      }\n    } catch (error) {\n      console.error(\"Error posting tweet:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tweetBox\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handletweet,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tweetBox__input\",\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          src: (_loggedinsuer$2 = loggedinsuer[0]) !== null && _loggedinsuer$2 !== void 0 && _loggedinsuer$2.profileImage ? loggedinsuer[0].profileImage : user && user.photoURL\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"What's happening?\",\n          onChange: e => setpost(e.target.value),\n          value: post,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"imageIcon_tweetButton\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"image\",\n          className: \"imageIcon\",\n          children: isloading ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Uploading Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: imageurl ? \"Image Uploaded\" : /*#__PURE__*/_jsxDEV(AddPhotoAlternateOutlinedIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"image\",\n          className: \"imageInput\",\n          onChange: handleuploadimage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"tweetBox__tweetButton\",\n          type: \"submit\",\n          children: \"Tweets\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(Tweetbox, \"t8Q+FMK0GyFMVa+72vgupYdMil0=\", false, function () {\n  return [useUserAuth, useLoggedinuser];\n});\n_c = Tweetbox;\nexport default Tweetbox;\nvar _c;\n$RefreshReg$(_c, \"Tweetbox\");","map":{"version":3,"names":["React","useState","Avatar","Button","AddPhotoAlternateOutlinedIcon","axios","useUserAuth","useLoggedinuser","jsxDEV","_jsxDEV","Tweetbox","_s","_loggedinsuer$","_loggedinsuer$2","post","setpost","imageurl","setimageurl","isloading","setisloading","name","setname","username","setusername","user","loggedinsuer","email","userprofilepic","profileImage","photoURL","handleuploadimage","e","image","target","files","formData","FormData","set","then","res","data","display_url","catch","console","log","handletweet","preventDefault","currentName","currentUsername","_user$providerData$","providerData","providerId","_data$","_data$2","fetch","json","displayName","split","userPost","profilephoto","photo","postRes","method","headers","body","JSON","stringify","postData","error","className","children","onSubmit","src","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","value","required","htmlFor","id","_c","$RefreshReg$"],"sources":["C:/Users/ACER/Desktop/Nullclass Twitter/twitter clone/Twiller/src/Pages/Feed/Tweetbox/Tweetbox.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Tweetbox.css\";\r\nimport { Avatar, Button } from \"@mui/material\";\r\nimport AddPhotoAlternateOutlinedIcon from \"@mui/icons-material/AddPhotoAlternateOutlined\";\r\nimport axios from \"axios\";\r\nimport { useUserAuth } from \"../../../context/UserAuthContext\";\r\nimport useLoggedinuser from \"../../../hooks/useLoggedinuser\";\r\nconst Tweetbox = () => {\r\n  const [post, setpost] = useState(\"\");\r\n  const [imageurl, setimageurl] = useState(\"\");\r\n  const [isloading, setisloading] = useState(false);\r\n  const [name, setname] = useState(\"\");\r\n  const [username, setusername] = useState(\"\");\r\n  const { user } = useUserAuth();\r\n  const [loggedinsuer] = useLoggedinuser();\r\n  const email = user?.email;\r\n  const userprofilepic = loggedinsuer[0]?.profileImage\r\n    ? loggedinsuer[0].profileImage\r\n    : user && user.photoURL;\r\n\r\n  const handleuploadimage = (e) => {\r\n    setisloading(true);\r\n    const image = e.target.files[0];\r\n    // console.log(image)\r\n    const formData = new FormData();\r\n    formData.set(\"image\", image);\r\n    axios\r\n      .post(\r\n        \"https://api.imgbb.com/1/upload?key=b48ccca05a6f8a493e15fe0e4d526b31\",\r\n        formData\r\n      )\r\n      .then((res) => {\r\n        setimageurl(res.data.data.display_url);\r\n        // console.log(res.data.data.display_url);\r\n        setisloading(false);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n  const handletweet = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Default values for name and username\r\n    let currentName = \"\";\r\n    let currentUsername = \"\";\r\n    \r\n    try {\r\n      // Check if the user is logged in with email/password or social login\r\n      if (user?.providerData[0]?.providerId === \"password\") {\r\n        const res = await fetch(`http://localhost:5000/loggedinuser?email=${email}`);\r\n        const data = await res.json();\r\n        currentName = data[0]?.name;\r\n        currentUsername = data[0]?.username;\r\n      } else {\r\n        currentName = user?.displayName;\r\n        currentUsername = email?.split(\"@\")[0];\r\n      }\r\n  \r\n      // Ensure we have a valid name before proceeding\r\n      if (currentName) {\r\n        const userPost = {\r\n          profilephoto: userprofilepic,\r\n          post: post,\r\n          photo: imageurl,\r\n          username: currentUsername,\r\n          name: currentName,\r\n          email: email,\r\n        };\r\n  \r\n        // Clear input fields after data is prepared\r\n        setpost(\"\");\r\n        setimageurl(\"\");\r\n  \r\n        // Post the data to the server\r\n        const postRes = await fetch(\"http://localhost:5000/post\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(userPost),\r\n        });\r\n  \r\n        const postData = await postRes.json();\r\n        console.log(\"Post successfully sent:\", postData);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error posting tweet:\", error);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"tweetBox\">\r\n      <form onSubmit={handletweet}>\r\n        <div className=\"tweetBox__input\">\r\n          <Avatar\r\n            src={\r\n              loggedinsuer[0]?.profileImage\r\n                ? loggedinsuer[0].profileImage\r\n                : user && user.photoURL\r\n            }\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"What's happening?\"\r\n            onChange={(e) => setpost(e.target.value)}\r\n            value={post}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"imageIcon_tweetButton\">\r\n          <label htmlFor=\"image\" className=\"imageIcon\">\r\n            {isloading ? (\r\n              <p>Uploading Image</p>\r\n            ) : (\r\n              <p>\r\n                {imageurl ? (\r\n                  \"Image Uploaded\"\r\n                ) : (\r\n                  <AddPhotoAlternateOutlinedIcon />\r\n                )}\r\n              </p>\r\n            )}\r\n          </label>\r\n          <input\r\n            type=\"file\"\r\n            id=\"image\"\r\n            className=\"imageInput\"\r\n            onChange={handleuploadimage}\r\n          />\r\n          <Button className=\"tweetBox__tweetButton\" type=\"submit\">\r\n            Tweets\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tweetbox;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}